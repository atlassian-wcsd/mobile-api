AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Timeout: 5
  Api:
    EndpointConfiguration: REGIONAL
    SecurityHeaders:
      ContentSecurityPolicy: "default-src 'self'"
      StrictTransportSecurity: "max-age=31536000; includeSubdomains"
      XContentTypeOptions: nosniff
      XFrameOptions: DENY
      ReferrerPolicy: strict-origin-when-cross-origin
    AccessLogSetting:
      DestinationArn: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/apigateway/SubmitImageAPI"
      Format: '{"requestId":"$context.requestId","ip":"$context.identity.sourceIp","caller":"$context.identity.caller","user":"$context.identity.user","requestTime":"$context.requestTime","httpMethod":"$context.httpMethod","resourcePath":"$context.resourcePath","status":"$context.status","protocol":"$context.protocol","responseLength":"$context.responseLength"}'

Resources:
  SubmitImageBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  SubmitImageTable:
    Type: AWS::DynamoDB::Table
    Properties:
      SSESpecification:
        SSEEnabled: true
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH

  SubmitImageFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: submitImage/
      Handler: bootstrap
      Runtime: provided.al2
      Tracing: Active
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:PutItem
                - dynamodb:GetItem
                - dynamodb:Query
              Resource: !GetAtt SubmitImageTable.Arn
            - Effect: Allow
              Action:
                - s3:PutObject
                - s3:GetObject
              Resource: !Sub "${SubmitImageBucket.Arn}/*"
            - Effect: Allow
              Action:
                - xray:PutTraceSegments
                - xray:PutTelemetryRecords
              Resource: "*"
      Environment:
        Variables:
          BUCKET_NAME: !Ref SubmitImageBucket
          TABLE_NAME: !Ref SubmitImageTable
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /bootstrap
            Method: GET
            Auth: AWS_IAM
      Tags:
        Name: submitImage
        business_unit: agile_devops_pmm
        service_name: open_devops_image_rec
        resource_owner: wmarusiak

Outputs:
  SubmitImageAPI:
    Description: "API Gateway endpoint URL for Prod environment for Submit Image Function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/bootstrap"
  SubmitImageFunction:
    Description: "First Lambda Function ARN"
    Value: !GetAtt SubmitImageFunction.Arn
  SubmitImageFunctionIamRole:
    Description: "Implicit IAM Role created for Submit Image function"
    Value: !GetAtt SubmitImageFunctionRole.Arn
  SubmitImageFunctionName:
    Description: "SubmitImage function name"
    Value: !Ref SubmitImageFunction
    Export:
      Name: SubmitImageFunctionName
