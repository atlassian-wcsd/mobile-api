openapi: "3.0.0"
info:
  version: 1.0.0
  title: Mobile Handwriting Signature API
  description: API for managing mobile handwriting signatures
  license:
    name: MIT
servers:
  - url: http://api.signatures.com/v1
paths:
  /signatures:
    post:
      summary: Create a new handwriting signature
      operationId: createSignature
      tags:
        - signatures
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureInput'
      responses:
        '201':
          description: Signature created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Signature"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      summary: List all signatures for a user
      operationId: listSignatures
      tags:
        - signatures
      parameters:
        - name: userId
          in: query
          description: ID of the user whose signatures to retrieve
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: Maximum number of signatures to return
          required: false
          schema:
            type: integer
            maximum: 50
            default: 20
      responses:
        '200':
          description: List of signatures
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Signature"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /signatures/{signatureId}:
    get:
      summary: Get a specific signature
      operationId: getSignature
      tags:
        - signatures
      parameters:
        - name: signatureId
          in: path
          required: true
          description: The ID of the signature to retrieve
          schema:
            type: string
      responses:
        '200':
          description: The requested signature
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Signature"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete a signature
      operationId: deleteSignature
      tags:
        - signatures
      parameters:
        - name: signatureId
          in: path
          required: true
          description: The ID of the signature to delete
          schema:
            type: string
      responses:
        '204':
          description: Signature successfully deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /signatures/verify:
    post:
      summary: Verify a signature
      operationId: verifySignature
      tags:
        - signatures
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureVerificationRequest'
      responses:
        '200':
          description: Signature verification result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignatureVerificationResult"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    SignatureInput:
      type: object
      required:
        - userId
        - signatureData
      properties:
        userId:
          type: string
          description: ID of the user creating the signature
        signatureData:
          type: string
          description: Base64 encoded signature image data
        metadata:
          type: object
          properties:
            deviceType:
              type: string
              description: Type of device used for signature capture
            pressureData:
              type: array
              description: Pressure data points captured during signature
              items:
                type: number
            timestamp:
              type: string
              format: date-time
    Signature:
      type: object
      required:
        - id
        - userId
        - signatureData
        - createdAt
      properties:
        id:
          type: string
        userId:
          type: string
        signatureData:
          type: string
        metadata:
          $ref: "#/components/schemas/SignatureMetadata"
        createdAt:
          type: string
          format: date-time
        lastUsed:
          type: string
          format: date-time
    SignatureMetadata:
      type: object
      properties:
        deviceType:
          type: string
        pressureData:
          type: array
          items:
            type: number
        timestamp:
          type: string
          format: date-time
    SignatureVerificationRequest:
      type: object
      required:
        - signatureId
        - documentHash
      properties:
        signatureId:
          type: string
        documentHash:
          type: string
          description: Hash of the document being verified
    SignatureVerificationResult:
      type: object
      required:
        - isValid
        - verificationTimestamp
      properties:
        isValid:
          type: boolean
        verificationTimestamp:
          type: string
          format: date-time
        details:
          type: object
          properties:
            confidenceScore:
              type: number
              format: float
              minimum: 0
              maximum: 1
            matchedFeatures:
              type: array
              items:
                type: string
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
