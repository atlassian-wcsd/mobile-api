openapi: "3.0.0"
info:
  version: 1.0.0
  title: Mobile Authentication API
  description: API for mobile key-based authentication
  license:
    name: MIT
servers:
  - url: https://api.example.com/v1
paths:
  /auth:
    post:
      summary: Authenticate using a key
      operationId: authenticateWithKey
      tags:
        - auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
      responses:
        '200':
          description: Successful authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /auth/key:
    post:
      summary: Create a new authentication key
      operationId: createAuthKey
      tags:
        - auth
      security:
        - BearerAuth: []
      responses:
        '201':
          description: Authentication key created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthKey'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      summary: Revoke an authentication key
      operationId: revokeAuthKey
      tags:
        - auth
      security:
        - BearerAuth: []
      parameters:
        - name: keyId
          in: query
          required: true
          description: The ID of the key to revoke
          schema:
            type: string
      responses:
        '200':
          description: Key successfully revoked
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /pets:
    get:
      summary: List all pets
      operationId: listPets
      tags:
        - pets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            maximum: 100
            format: int32
      responses:
        '200':
          description: A paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Pets"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a pet
      operationId: createPets
      tags:
        - pets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
        required: true
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /pets/{petId}:
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
        - name: petAlias
          in: path
          required: false
          description: The alias of the pet to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    AuthRequest:
      type: object
      required:
        - keyId
        - keyValue
      properties:
        keyId:
          type: string
          description: The unique identifier of the authentication key
        keyValue:
          type: string
          description: The secret value of the authentication key

    AuthResponse:
      type: object
      required:
        - success
      properties:
        success:
          type: boolean
          description: Whether the authentication was successful
        token:
          type: string
          description: JWT token for authenticated session
        error:
          type: string
          description: Error message if authentication failed
        userId:
          type: string
          description: ID of the authenticated user

    AuthKey:
      type: object
      required:
        - keyId
        - keyValue
        - createdAt
        - status
      properties:
        keyId:
          type: string
          description: Unique identifier for the key
        keyValue:
          type: string
          description: Secret value used for authentication
        createdAt:
          type: string
          format: date-time
          description: When the key was created
        expiresAt:
          type: string
          format: date-time
          description: When the key expires (if applicable)
        status:
          type: string
          enum: [active, revoked, expired]
          description: Current status of the key

    Pet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Pets:
      type: array
      maxItems: 100
      items:
        $ref: "#/components/schemas/Pet"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
