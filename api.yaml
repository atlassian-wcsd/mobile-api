openapi: "3.0.0"
info:
  version: 1.0.0
  title: Signature Authentication API
  license:
    name: MIT
servers:
  - url: https://api.signatures.example.com/v1
paths:
  /auth/mobile:
    post:
      summary: Authenticate mobile device
      operationId: authenticateMobileDevice
      tags:
        - authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - deviceId
                - deviceFingerprint
              properties:
                deviceId:
                  type: string
                  description: Unique identifier for the mobile device
                deviceFingerprint:
                  type: object
                  properties:
                    platform:
                      type: string
                    osVersion:
                      type: string
                    appVersion:
                      type: string
                    deviceModel:
                      type: string
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  authToken:
                    type: string
                  expiresIn:
                    type: integer
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /signatures:
    post:
      summary: Create a new signature
      operationId: createSignature
      security:
        - BearerAuth: []
      tags:
        - signatures
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - imageData
                - width
                - height
                - deviceInfo
              properties:
                imageData:
                  type: string
                  description: Base64 encoded signature image
                width:
                  type: integer
                height:
                  type: integer
                deviceInfo:
                  type: object
                  required:
                    - deviceId
                    - platform
                  properties:
                    deviceId:
                      type: string
                    platform:
                      type: string
                    pressureData:
                      type: array
                      items:
                        type: number
      responses:
        '201':
          description: Signature created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Signature"
        '401':
          description: Unauthorized - Invalid or missing authentication token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '403':
          description: Forbidden - Device not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a pet
      operationId: createPets
      tags:
        - pets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
        required: true
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /pets/{petId}:
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
        - name: petAlias
          in: path
          required: false
          description: The alias of the pet to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Signature:
      type: object
      required:
        - id
        - imageData
        - width
        - height
        - createdAt
        - userId
        - deviceInfo
      properties:
        id:
          type: string
        imageData:
          type: string
        width:
          type: integer
        height:
          type: integer
        createdAt:
          type: string
          format: date-time
        userId:
          type: string
        deviceInfo:
          type: object
          required:
            - deviceId
            - platform
            - verificationStatus
          properties:
            deviceId:
              type: string
            platform:
              type: string
            verificationStatus:
              type: string
              enum: [VERIFIED, UNVERIFIED, BLOCKED]
            pressureData:
              type: array
              items:
                type: number
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
