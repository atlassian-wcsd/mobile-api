openapi: "3.0.0"
info:
  version: 1.0.0
  title: Mobile User Registration API
  description: API for mobile user registration and email verification
  license:
    name: MIT
servers:
  - url: https://api.example.com/v1
    description: Production server
paths:
  /users/register:
    post:
      summary: Register a new user
      operationId: registerUser
      tags:
        - users
      security:
        - {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
      responses:
        '201':
          description: User successfully registered
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegistrationResponse"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '409':
          description: Email already exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
                
  /users/verify-email:
    post:
      summary: Verify user email
      operationId: verifyEmail
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailVerification'
      responses:
        '200':
          description: Email successfully verified
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationResponse"
        '400':
          description: Invalid verification code
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Verification code not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    UserRegistration:
      type: object
      required:
        - name
        - email
        - password
        - phoneNumber
        - captchaToken
      properties:
        name:
          type: string
          minLength: 2
          maxLength: 100
          description: User's full name
        email:
          type: string
          format: email
          description: User's email address
        password:
          type: string
          format: password
          minLength: 8
          description: User's password (must contain at least 8 characters, including uppercase, lowercase, numbers)
        phoneNumber:
          type: string
          pattern: '^\+?[1-9]\d{1,14}$'
          description: User's phone number in E.164 format
        captchaToken:
          type: string
          description: CAPTCHA verification token
          
    EmailVerification:
      type: object
      required:
        - email
        - verificationCode
      properties:
        email:
          type: string
          format: email
          description: User's email address
        verificationCode:
          type: string
          description: Verification code sent to user's email
          
    RegistrationResponse:
      type: object
      required:
        - userId
        - message
      properties:
        userId:
          type: string
          format: uuid
          description: Unique identifier for the registered user
        message:
          type: string
          description: Success message
          example: "Registration successful. Please check your email for verification."
          
    VerificationResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Success message
          example: "Email verification successful"
          
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
          description: Error message
        details:
          type: array
          items:
            type: string
          description: Detailed error messages
          
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
